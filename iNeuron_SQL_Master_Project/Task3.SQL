#----------------------------------------------------------------------------
# TASK3.1
#----------------------------------------------------------------------------

#CREATE DATABASE
CREATE DATABASE TRANSACTIONS_DB;

#USE DATABASE
USE TRANSACTIONS_DB;

DROP TABLE TRANACTIONS;

#CREATE A TABLE
CREATE TABLE IF NOT EXISTS TRANS_31(
AMOUNT INTEGER NOT NULL,
DATE DATE NOT NULL);

SELECT * FROM TRANACTIONS;

INSERT INTO TRANS_31 (AMOUNT, DATE) VALUES 
(1000,'2000-01-06'),
(-10,'2020-01-14'),
(-75,'2020-01-20'),
(-5,'2020-01-25'),
(-4,'2020-01-29'),
(2000,'2020-03-10'),
(-75,'2020-03-12'),
(-20,'2020-03-15'),
(40,'2020-03-15'),
(-50,'2020-03-17'),
(200,'2020-10-10'),
(-200,'2020-10-10');

WITH AGG_MONTH_WISE4 AS (
WITH AGG_MONTH_WISE3 AS (       
WITH AGG_MONTH_WISE2 AS (
WITH AGG_MONTH_WISE1 AS (
WITH AGG_MONTH_WISE AS (
SELECT AMOUNT,DATE,MONTH(DATE) AS MONTH,CASE 
    WHEN AMOUNT < 0 THEN 1
    ELSE 0
    END AS CREDIT_CARD_TRANSACTION FROM TRANS_31)
SELECT MONTH, SUM(AMOUNT) as BALANCE, COUNT(MONTH) AS COUNTMONTH, SUM(CREDIT_CARD_TRANSACTION) AS CREDIT_CARD_TRANSACTION  FROM AGG_MONTH_WISE GROUP BY MONTH, CREDIT_CARD_TRANSACTION)
SELECT MONTH, BALANCE, COUNTMONTH, CREDIT_CARD_TRANSACTION, CASE
       WHEN CREDIT_CARD_TRANSACTION <= 0 THEN 0
       WHEN CREDIT_CARD_TRANSACTION > 0 AND (BALANCE*-1) >= 100 AND COUNTMONTH >= 3 THEN 0
       ELSE -5
       END AS CHARGES
       FROM AGG_MONTH_WISE1)
SELECT MONTH, SUM(BALANCE) AS BALANCE, COUNT(MONTH) AS COUNTMONTH, SUM(CHARGES) AS CHARGES FROM AGG_MONTH_WISE2 GROUP BY MONTH)
SELECT MONTH, BALANCE, COUNTMONTH, CHARGES, CASE
   WHEN (BALANCE >=0 AND CHARGES = 0 AND COUNTMONTH > 2) THEN CHARGES - 5
   ELSE CHARGES + 0
   END AS CHARGES2, BALANCE + CHARGES2 AS FINAL_BALANCE FROM AGG_MONTH_WISE3)
SELECT SUM(FINAL_BALANCE) + (12 - COUNT(DISTINCT MONTH))*-5 FROM AGG_MONTH_WISE4;


#----------------------------------------------------------------------------
# TASK3.2
#----------------------------------------------------------------------------

#CREATE A TABLE
CREATE TABLE IF NOT EXISTS TRANS_32(
AMOUNT INTEGER NOT NULL,
DATE DATE NOT NULL);

INSERT INTO TRANS_32 (AMOUNT, DATE) VALUES 
(1,'2020-06-29'),
(35,'2020-02-20'),
(-50,'2020-02-03'),
(-1,'2020-02-26'),
(-200,'2020-08-01'),
(-44,'2020-02-07'),
(-5,'2020-02-25'),
(1,'2020-06-29'),
(1,'2020-06-29'),
(-100,'2020-12-29'),
(-100,'2020-12-30'),
(-100,'2020-12-31');

WITH AGG_MONTH_WISE4 AS (
WITH AGG_MONTH_WISE3 AS (       
WITH AGG_MONTH_WISE2 AS (
WITH AGG_MONTH_WISE1 AS (
WITH AGG_MONTH_WISE AS (
SELECT AMOUNT,DATE,MONTH(DATE) AS MONTH,CASE 
    WHEN AMOUNT < 0 THEN 1
    ELSE 0
    END AS CREDIT_CARD_TRANSACTION FROM TRANS_32)
SELECT MONTH, SUM(AMOUNT) as BALANCE, COUNT(MONTH) AS COUNTMONTH, SUM(CREDIT_CARD_TRANSACTION) AS CREDIT_CARD_TRANSACTION  FROM AGG_MONTH_WISE GROUP BY MONTH, CREDIT_CARD_TRANSACTION)
SELECT MONTH, BALANCE, COUNTMONTH, CREDIT_CARD_TRANSACTION, CASE
       WHEN CREDIT_CARD_TRANSACTION <= 0 THEN 0
       WHEN CREDIT_CARD_TRANSACTION > 0 AND (BALANCE*-1) >= 100 AND COUNTMONTH >= 3 THEN 0
       ELSE -5
       END AS CHARGES
       FROM AGG_MONTH_WISE1)
SELECT MONTH, SUM(BALANCE) AS BALANCE, COUNT(MONTH) AS COUNTMONTH, SUM(CHARGES) AS CHARGES FROM AGG_MONTH_WISE2 GROUP BY MONTH)
SELECT MONTH, BALANCE, COUNTMONTH, CHARGES, CASE
   WHEN (BALANCE >=0 AND CHARGES = 0 AND COUNTMONTH >= 1) THEN CHARGES - 5
   ELSE CHARGES + 0
   END AS CHARGES2, BALANCE + CHARGES2 AS FINAL_BALANCE FROM AGG_MONTH_WISE3)
SELECT SUM(FINAL_BALANCE) + (12 - COUNT(DISTINCT MONTH))*-5 as Balance FROM AGG_MONTH_WISE4;


#----------------------------------------------------------------------------
# TASK3.3
#----------------------------------------------------------------------------

#CREATE A TABLE
CREATE TABLE IF NOT EXISTS TRANS_33(
AMOUNT INTEGER NOT NULL,
DATE DATE NOT NULL);


INSERT INTO TRANS_33 (AMOUNT, DATE) VALUES 
(6000,'2020-04-03'),
(5000,'2020-04-02'),
(4000,'2020-04-01'),
(3000,'2020-03-01'),
(2000,'2020-02-01'),
(1000,'2020-01-01');

WITH AGG_MONTH_WISE4 AS (
WITH AGG_MONTH_WISE3 AS (       
WITH AGG_MONTH_WISE2 AS (
WITH AGG_MONTH_WISE1 AS (
WITH AGG_MONTH_WISE AS (
SELECT AMOUNT,DATE,MONTH(DATE) AS MONTH,CASE 
    WHEN AMOUNT < 0 THEN 1
    ELSE 0
    END AS CREDIT_CARD_TRANSACTION FROM TRANS_33)
SELECT MONTH, SUM(AMOUNT) as BALANCE, COUNT(MONTH) AS COUNTMONTH, SUM(CREDIT_CARD_TRANSACTION) AS CREDIT_CARD_TRANSACTION  FROM AGG_MONTH_WISE GROUP BY MONTH, CREDIT_CARD_TRANSACTION)
SELECT MONTH, BALANCE, COUNTMONTH, CREDIT_CARD_TRANSACTION, CASE
       WHEN CREDIT_CARD_TRANSACTION <= 0 THEN 0
       WHEN CREDIT_CARD_TRANSACTION > 0 AND (BALANCE*-1) >= 100 AND COUNTMONTH >= 3 THEN 0
       ELSE -5
       END AS CHARGES
       FROM AGG_MONTH_WISE1)
SELECT MONTH, SUM(BALANCE) AS BALANCE, COUNT(MONTH) AS COUNTMONTH, SUM(CHARGES) AS CHARGES FROM AGG_MONTH_WISE2 GROUP BY MONTH)
SELECT MONTH, BALANCE, COUNTMONTH, CHARGES, CASE
   WHEN (BALANCE >=0 AND CHARGES = 0 AND COUNTMONTH >= 1) THEN CHARGES - 5
   ELSE CHARGES + 0
   END AS CHARGES2, BALANCE + CHARGES2 AS FINAL_BALANCE FROM AGG_MONTH_WISE3)
SELECT SUM(FINAL_BALANCE) + (12 - COUNT(DISTINCT MONTH))*-5 as Balance FROM AGG_MONTH_WISE4;
